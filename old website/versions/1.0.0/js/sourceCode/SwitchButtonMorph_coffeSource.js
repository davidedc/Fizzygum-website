// Generated by CoffeeScript 1.10.0
window.SwitchButtonMorph_coffeSource = '# SwitchButtonMorph ////////////////////////////////////////////////////////\n\n\nclass SwitchButtonMorph extends Morph\n  # this is so we can create objects from the object class name \n  # (for the deserialization process)\n  namedClasses[@name] = @prototype\n\n  buttons: null\n \n  # careful: Objects are shared with all the instances of this class.\n  # if you modify it, then all the objects will get the change\n  # but if you replace it with a new Color, then that will only affect the\n  # specific object instance. Same behaviour as with arrays.\n  # see: https://github.com/jashkenas/coffee-script/issues/2501#issuecomment-7865333\n  highlightColor: new Color 192, 192, 192\n  # see note above about Colors and shared objects\n  pressColor: new Color 128, 128, 128\n \n  closesUnpinnedMenus: true\n  \n  buttonShown: 0\n\n  # overrides to superclass\n  color: new Color 255, 255, 255\n\n  constructor: (@buttons) ->\n\n    # additional properties:\n\n    super()\n\n    #@color = new Color 255, 152, 152\n    #@color = new Color 255, 255, 255\n    for eachButton in @buttons\n      @add eachButton\n    @layoutSubmorphs()\n  \n  layoutSubmorphs: (morphStartingTheChange = null) ->\n    super()\n    counter = 0\n    for eachButton in @buttons\n      if eachButton.parent == @\n        eachButton.setBounds @bounds\n        if counter % @buttons.length == @buttonShown\n          eachButton.show()\n        else\n          eachButton.hide()\n      counter++\n\n  # TODO\n  getTextDescription: ->\n\n  \n\n  mouseClickLeft: ->\n    debugger\n\n    @buttonShown++\n    @buttonShown = @buttonShown % @buttons.length\n\n    @layoutSubmorphs()\n    @escalateEvent "mouseClickLeft", @\n\n  resetSwitchButton: ->\n    @buttonShown = 0\n    @layoutSubmorphs()\n';
