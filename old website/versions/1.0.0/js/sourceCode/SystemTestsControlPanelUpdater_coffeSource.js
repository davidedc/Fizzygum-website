// Generated by CoffeeScript 1.10.0
window.SystemTestsControlPanelUpdater_coffeSource = '# Manages the controls of the System Tests\n# e.g. all the links/buttons to trigger commands\n# when recording tests such as\n#  - start recording tests\n#  - stop recording tests\n#  - take screenshot\n#  - save test files\n#  - place the mouse over a morph with particular ID...\n\n\nclass SystemTestsControlPanelUpdater\n\n  # Create the div where the controls will go\n  # and make it float to the right of the canvas.\n  # This requires tweaking the css of the canvas\n  # as well.\n\n  SystemTestsControlPanelDiv: null\n  @SystemTestsControlPanelOutputConsoleDiv: null\n\n  @resetWorldLink: null\n  @tieAnimations: null\n  @alignMorphIDs: null\n  @hideGeometry: null\n  @hideMorphContentExtracts: null\n  @hideMorphIDs: null\n  @takeScreenshot: null\n  @checkNumnberOfItems: null\n  @checkMenuEntriesInOrder: null\n  @checkMenuEntriesNotInOrder: null\n  @addTestComment: null\n  @evaluateString: null\n  @stopTestRec: null\n\n  @highlightOnLink: (theElementName) ->\n    theElement = document.getElementById(theElementName + "On")\n    if theElement?\n      theElement.style.backgroundColor = \'red\'\n    theElement = document.getElementById(theElementName + "Off")\n    if theElement?\n      theElement.style.backgroundColor = \'white\'\n\n  @highlightOffLink: (theElementName) ->\n    theElement = document.getElementById(theElementName + "On")\n    if theElement?\n      theElement.style.backgroundColor = \'white\'\n    theElement = document.getElementById(theElementName + "Off")\n    if theElement?\n      theElement.style.backgroundColor = \'red\'\n\n\n  @addMessageToSystemTestsConsole: (theText) ->\n    SystemTestsControlPanelUpdater.SystemTestsControlPanelOutputConsoleDiv.innerHTML =\n        SystemTestsControlPanelUpdater.SystemTestsControlPanelOutputConsoleDiv.innerHTML +\n        theText + "</br>"\n\n  @addMessageToTestCommentsConsole: (theText) ->\n    SystemTestsControlPanelUpdater.SystemTestsControlPanelTestCommentsOutputConsoleDiv.innerHTML =\n        SystemTestsControlPanelUpdater.SystemTestsControlPanelTestCommentsOutputConsoleDiv.innerHTML + theText + "</br>"\n\n  @blinkLink: (theId) ->\n    theElement = document.getElementById theId\n\n    if theElement?\n        theElement.style.backgroundColor = \'red\'\n        setTimeout \\\n          ->\n            theElement.style.backgroundColor = \'white\'\n          , 100\n        setTimeout \\\n          ->\n            theElement.style.backgroundColor = \'red\'\n          , 200\n        setTimeout \\\n          ->\n            theElement.style.backgroundColor = \'white\'\n          , 300\n\n\n  addLink: (theText, theFunction) ->\n    aTag = document.createElement "a"\n    linkID = theText.replace(/[^a-zA-Z0-9]/g, "")\n    aTag.id = linkID\n    aTag.setAttribute "href", "#"\n    aTag.innerHTML = theText\n    aTag.onclick = theFunction\n    @SystemTestsControlPanelDiv.appendChild aTag\n    br = document.createElement "br"\n    @SystemTestsControlPanelDiv.appendChild br\n    return linkID\n\n  addOnOffSwitchLink: (theText, onShortcut, offShortcut, onAction, offAction) ->\n    #aLittleDiv = document.createElement("div")\n    \n    linkID = theText.replace(/[^a-zA-Z0-9]/g, "")\n    aLittleSpan = document.createElement "span"\n    aLittleSpan.innerHTML = theText + " "\n\n    aLittleSpacerSpan = document.createElement "span"\n    aLittleSpacerSpan.innerHTML = " "\n\n    onLinkElement = document.createElement "a"\n    onLinkElement.setAttribute "href", "#"\n    onLinkElement.innerHTML = "on:" + onShortcut\n    onLinkElement.id = linkID + "On"\n    onLinkElement.onclick = onAction\n\n    offLinkElement = document.createElement "a"\n    offLinkElement.setAttribute "href", "#"\n    offLinkElement.innerHTML = "off:" + offShortcut\n    offLinkElement.id = linkID + "Off"\n    offLinkElement.onclick = offAction\n\n    @SystemTestsControlPanelDiv.appendChild aLittleSpan\n    @SystemTestsControlPanelDiv.appendChild onLinkElement\n    @SystemTestsControlPanelDiv.appendChild aLittleSpacerSpan\n    @SystemTestsControlPanelDiv.appendChild offLinkElement\n\n    br = document.createElement "br"\n    @SystemTestsControlPanelDiv.appendChild br\n    return linkID\n\n  addOutputPanel: (nameOfPanel, css) ->\n    SystemTestsControlPanelUpdater[nameOfPanel] = document.createElement "div"\n    SystemTestsControlPanelUpdater[nameOfPanel].id = nameOfPanel\n    SystemTestsControlPanelUpdater[nameOfPanel].style.cssText = css\n    document.body.appendChild(SystemTestsControlPanelUpdater[nameOfPanel])\n\n  constructor: ->\n    \n    document.getElementById("world").style.top = "25px"\n\n    @SystemTestsControlPanelDiv = document.createElement "div"\n    @SystemTestsControlPanelDiv.id = "SystemTestsControlPanel"\n    @SystemTestsControlPanelDiv.style.cssText =\n        \'border: 1px solid green; overflow: hidden; font-size: xx-small; top: 464px; left: 200px; position: absolute;\'\n    document.body.appendChild @SystemTestsControlPanelDiv\n\n    @addOutputPanel "SystemTestsControlPanelOutputConsoleDiv",\n        "height: 127px; width: 571px; border: 1px solid red; overflow-y: scroll; overflow-x: hidden; position: absolute; top: 464px; left: 386px;"\n    @addOutputPanel "SystemTestsControlPanelTestCommentsOutputConsoleDiv",\n        "height: 128px; border: 1px solid red; overflow-y: scroll; overflow-x: hidden;position: absolute;top: 592px;width: 757px;left: 200px;"\n\n    theCanvasDiv = document.getElementById "world"\n    # one of these is for IE and the other one\n    # for everybody else\n    theCanvasDiv.style.styleFloat = \'left\'\n    theCanvasDiv.style.cssFloat = \'left\'\n\n    # The spirit of these links is that it would\n    # be really inconvenient to trigger\n    # these commands using menus during the test.\n    # For example it would be inconvenient to stop\n    # the tests recording by selecting the command\n    # via e menu: a bunch of mouse actions would be\n    # recorded, exposing as well to the risk of the\n    # menu items changing.\n    SystemTestsControlPanelUpdater.resetWorldLink =\n            @addLink "alt+d: reset world",\n                (-> window.world.automatorRecorderAndPlayer.resetWorld())\n    SystemTestsControlPanelUpdater.tieAnimations =\n        @addOnOffSwitchLink "tie animations to test step",\n            "alt+e",\n            "alt+u",\n            (-> window.world.automatorRecorderAndPlayer.turnOnAnimationsPacingControl()),\n            (-> window.world.automatorRecorderAndPlayer.turnOffAnimationsPacingControl())\n    SystemTestsControlPanelUpdater.alignMorphIDs =\n        @addOnOffSwitchLink "periodically align Morph IDs",\n            "-",\n            "-",\n            (-> window.world.automatorRecorderAndPlayer.turnOnAlignmentOfMorphIDsMechanism()),\n            (-> window.world.automatorRecorderAndPlayer.turnOffAlignmentOfMorphIDsMechanism())\n    SystemTestsControlPanelUpdater.hideGeometry =\n        @addOnOffSwitchLink "hide Morph geometry in labels",\n            "-",\n            "-",\n            (-> window.world.automatorRecorderAndPlayer.turnOnHidingOfMorphsGeometryInfoInLabels()), (-> window.world.automatorRecorderAndPlayer.turnOffHidingOfMorphsGeometryInfoInLabels())\n\n    SystemTestsControlPanelUpdater.hideMorphContentExtracts =\n        @addOnOffSwitchLink "hide Morph content extract in labels",\n            "-",\n            "-",\n            (-> window.world.automatorRecorderAndPlayer.turnOnHidingOfMorphsContentExtractInLabels()), (-> window.world.automatorRecorderAndPlayer.turnOffHidingOfMorphsContentExtractInLabels())\n\n    SystemTestsControlPanelUpdater.hideMorphIDs =\n        @addOnOffSwitchLink "hide Morph number ID in labels",\n            "-",\n            "-",\n            (-> window.world.automatorRecorderAndPlayer.turnOnHidingOfMorphsNumberIDInLabels()), (-> window.world.automatorRecorderAndPlayer.turnOffHidingOfMorphsNumberIDInLabels())\n\n    SystemTestsControlPanelUpdater.takeScreenshot =\n        @addLink "alt+c: take screenshot",\n            (-> window.world.automatorRecorderAndPlayer.takeScreenshot())\n    SystemTestsControlPanelUpdater.checkNumnberOfItems =\n        @addLink "alt+k: check number of items in menu",\n            (-> window.world.automatorRecorderAndPlayer.checkNumberOfItemsInMenu())\n    SystemTestsControlPanelUpdater.checkMenuEntriesInOrder =\n        @addLink "alt+a: check menu entries (in order)",\n            (-> window.world.automatorRecorderAndPlayer.checkStringsOfItemsInMenuOrderImportant())\n    SystemTestsControlPanelUpdater.checkMenuEntriesNotInOrder =\n        @addLink "alt+z: check menu entries (any order)",\n            (-> window.world.automatorRecorderAndPlayer.checkStringsOfItemsInMenuOrderUnimportant())\n    SystemTestsControlPanelUpdater.addTestComment =\n        @addLink "alt+m: add test comment",\n            (-> window.world.automatorRecorderAndPlayer.addTestComment())\n    SystemTestsControlPanelUpdater.evaluateString =\n        @addLink "run command",\n            (-> window.world.automatorRecorderAndPlayer.evaluateString())\n    SystemTestsControlPanelUpdater.stopTestRec =\n        @addLink "alt+t: stop test recording",\n            (-> window.world.automatorRecorderAndPlayer.stopTestRecording())\n\n\n    # add the div with the fake mouse pointer\n    mousePointerIndicator = document.createElement "div"\n    mousePointerIndicator.id = "mousePointerIndicator"\n    mousePointerIndicator.style.cssText = \'position: absolute; display:none;\'\n    document.body.appendChild mousePointerIndicator\n    elem = document.createElement "img"\n    elem.setAttribute "src", "icons/xPointerImage.png"\n    # this image is actually 160x160\n    # to make sure it looks crisp on\n    # higher-ppi displays\n    elem.setAttribute "width", "40px"\n    elem.setAttribute "height", "40px"\n    document.getElementById("mousePointerIndicator").appendChild elem\n\n    # add the div highlighting the state of the\n    # left mouse button\n    leftMouseButtonIndicator = document.createElement "div"\n    leftMouseButtonIndicator.id = "leftMouseButtonIndicator"\n    leftMouseButtonIndicator.style.cssText = \'position: absolute; left: 10px; top: 477px;\'\n    document.body.appendChild leftMouseButtonIndicator\n    elem = document.createElement "img"\n    elem.setAttribute "src", "icons/leftButtonPressed.png"\n    document.getElementById("leftMouseButtonIndicator").appendChild elem\n    fade \'leftMouseButtonIndicator\', 1, 0, 10, new Date().getTime()\n\n    # add the div highlighting the state of the\n    # right mouse button\n    rightMouseButtonIndicator = document.createElement "div"\n    rightMouseButtonIndicator.id = "rightMouseButtonIndicator"\n    rightMouseButtonIndicator.style.cssText = \'position: absolute; left: 10px; top: 477px;\'\n    document.body.appendChild rightMouseButtonIndicator\n    elem = document.createElement "img"\n    elem.setAttribute "src", "icons/rightButtonPressed.png"\n    document.getElementById("rightMouseButtonIndicator").appendChild elem\n    fade \'rightMouseButtonIndicator\', 1, 0, 10, new Date().getTime()\n\n\n    # ------------------------------------------------------\n    # add the progress bar, which is made of two nested divs\n    singleTestProgressBar = document.createElement "div"\n    singleTestProgressBar.id = "singleTestProgressBar"\n    singleTestProgressBar.style.cssText =\n        \'position: absolute; left: 20%; top: 0px; font-size: xx-large; font-family: sans-serif; width: 100%; height: 50px; background: rgb(173, 173, 173);\'\n\n    singleTestProgressBarWrap = document.createElement "div"\n    singleTestProgressBarWrap.id = "singleTestProgressBarWrap"\n    singleTestProgressBarWrap.style.cssText =\n        \'position: absolute; left: 5px; top: 5px; font-size: xx-large; font-family: sans-serif; width: 100px; height: 14px; overflow: hidden; background: rgb(0, 0, 0);\'\n    singleTestProgressBarWrap.appendChild(singleTestProgressBar)\n    document.body.appendChild(singleTestProgressBarWrap)\n    fade \'singleTestProgressBarWrap\', 1, 0, 10, new Date().getTime()\n\n    # add the div highlighting the percentage progress of the test\n    singleTestProgressIndicator = document.createElement "div"\n    singleTestProgressIndicator.id = "singleTestProgressIndicator"\n    singleTestProgressIndicator.style.cssText =\n        \'position: absolute; left: 10px; top: 5px; font-size: 0.8em; font-family: sans-serif; color: white;\'\n    document.body.appendChild singleTestProgressIndicator\n    fade \'singleTestProgressIndicator\', 1, 0, 10, new Date().getTime()\n\n\n    # ------------------------------------------------------\n    # add the progress bar, which is made of two nested divs\n    allTestsProgressBar = document.createElement "div"\n    allTestsProgressBar.id = "allTestsProgressBar"\n    allTestsProgressBar.style.cssText = \'position: absolute; left: 20%; top: 0px; font-size: xx-large; font-family: sans-serif; width: 100%; height: 50px; background: rgb(173, 173, 173);\'\n\n    allTestsProgressBarWrap = document.createElement "div"\n    allTestsProgressBarWrap.id = "allTestsProgressBarWrap"\n    allTestsProgressBarWrap.style.cssText = \'position: absolute; left: 110px; top: 5px; font-size: xx-large; font-family: sans-serif; width: 100px; height: 14px; overflow: hidden; background: rgb(0, 0, 0);\'\n    allTestsProgressBarWrap.appendChild(allTestsProgressBar)\n    document.body.appendChild(allTestsProgressBarWrap)\n    fade \'allTestsProgressBarWrap\', 1, 0, 10, new Date().getTime()\n\n    # add the div highlighting the percentage progress of the test\n    allTestsProgressIndicator = document.createElement "div"\n    allTestsProgressIndicator.id = "allTestsProgressIndicator"\n    allTestsProgressIndicator.style.cssText = \'position: absolute; left: 115px; top: 5px; font-size: 0.8em; font-family: sans-serif; color: white;\'\n    document.body.appendChild(allTestsProgressIndicator)\n    fade \'allTestsProgressIndicator\', 1, 0, 10, new Date().getTime()\n\n\n    # ------------------------------------------------------\n    # add the div with title and description of the test\n    testTitleAndDescription = document.createElement "div"\n    testTitleAndDescription.id = "testTitleAndDescription"\n    testTitleAndDescription.style.cssText = \'position: absolute; left: 0px; top: 25px; font-size: 1.5em; font-family: sans-serif; background-color: rgba(128, 128, 128, 1); width: 860px; height: 340px; padding: 50px; color: white;\'\n    document.body.appendChild(testTitleAndDescription)\n    fade \'testTitleAndDescription\', 1, 0, 10, new Date().getTime()\n    #testTitleAndDescription.innerHTML = "Test asdasdasdasdasdakjhdasdasdasd"\n\n    # ------------------------------------------------------\n    # add the div highlighting the percentage progress of the test\n    numberOfTestsDoneIndicator = document.createElement "div"\n    numberOfTestsDoneIndicator.id = "numberOfTestsDoneIndicator"\n    numberOfTestsDoneIndicator.style.cssText = \'position: absolute; left: 217px; top: 5px; font-size: 0.8em; font-family: sans-serif; color: black;\'\n    document.body.appendChild numberOfTestsDoneIndicator\n    fade \'numberOfTestsDoneIndicator\', 1, 0, 10, new Date().getTime()\n\n    # ------------------------------------------------------\n    # add the div highlighting the number of failed tests\n    numberOfFailedTests = document.createElement "div"\n    numberOfFailedTests.id = "numberOfFailedTests"\n    numberOfFailedTests.style.cssText = \'position: absolute; left: 291px; top: 5px; font-size: 0.8em; font-family: sans-serif; color: black; text-decoration: underline; cursor:pointer;\'\n    document.body.appendChild(numberOfFailedTests)\n    numberOfFailedTests.onclick = ->\n        debugger\n        world.automatorRecorderAndPlayer.saveFailedScreenshots()\n    #fade(\'numberOfFailedTests\', 1, 0, 10, new Date().getTime());\n';
