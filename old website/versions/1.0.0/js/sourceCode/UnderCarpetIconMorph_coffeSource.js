// Generated by CoffeeScript 1.10.0
window.UnderCarpetIconMorph_coffeSource = '# UnderCarpetIconMorph //////////////////////////////////////////////////////\n\n\nclass UnderCarpetIconMorph extends Morph\n  # this is so we can create objects from the object class name \n  # (for the deserialization process)\n  namedClasses[@name] = @prototype\n\n  #constructor: ->\n  #  super()\n  #  @setColor new Color 0, 0, 0\n\n\n  # This method only paints this very morph\'s "image",\n  # it doesn\'t descend the children\n  # recursively. The recursion mechanism is done by fullPaintIntoAreaOrBlitFromBackBuffer, which\n  # eventually invokes paintIntoAreaOrBlitFromBackBuffer.\n  # Note that this morph might paint something on the screen even if\n  # it\'s not a "leaf".\n  paintIntoAreaOrBlitFromBackBuffer: (aContext, clippingRectangle) ->\n\n    if @preliminaryCheckNothingToDraw false, clippingRectangle, aContext\n      return\n\n    [area,sl,st,al,at,w,h] = @calculateKeyValues aContext, clippingRectangle\n    if area.isNotEmpty()\n      if w < 1 or h < 1\n        return null\n\n      aContext.save()\n\n      # clip out the dirty rectangle as we are\n      # going to paint the whole of the box\n      aContext.clipToRectangle al,at,w,h\n\n      aContext.globalAlpha = @alpha\n\n      aContext.scale pixelRatio, pixelRatio\n\n      morphPosition = @position()\n      aContext.translate morphPosition.x, morphPosition.y\n\n      height = @height()\n      width = @width()\n\n      squareDim = Math.min width, height\n\n      if width > height\n        aContext.translate (width-squareDim)/2,0\n      else\n        aContext.translate 0,(height-squareDim)/2\n\n      squareSize = 400\n      aContext.scale squareDim/squareSize, squareDim/squareSize\n\n      ## at this point, you draw in a squareSize x squareSize\n      ## canvas, and it gets painted in a square that fits\n      ## the morph, right in the middle.\n      @drawingIconInSquare aContext\n\n      aContext.restore()\n\n      # paintHighlight is usually made to work with\n      # al, at, w, h which are actual pixels\n      # rather than logical pixels, so it\'s generally used\n      # outside the effect of the scaling because\n      # of the pixelRatio (i.e. after the restore)\n      @paintHighlight aContext, al, at, w, h\n\n  oval = (context, x, y, w, h) ->\n    context.save()\n    context.beginPath()\n    context.translate x, y\n    context.scale w / 2, h / 2\n    context.arc 1, 1, 1, 0, 2 * Math.PI, false\n    context.closePath()\n    context.restore()\n    return\n\n  arc = (context, x, y, w, h, startAngle, endAngle, isClosed) ->\n    context.save()\n    context.beginPath()\n    context.translate x, y\n    context.scale w / 2, h / 2\n    context.arc 1, 1, 1, Math.PI / 180 * startAngle, Math.PI / 180 * endAngle, false\n    if isClosed\n      context.lineTo 1, 1\n      context.closePath()\n    context.restore()\n    return\n\n  drawingIconInSquare: (context) ->\n    #// Color Declarations\n    color2 = \'rgba(0, 0, 0, 1)\'\n    #// Bezier Drawing\n    context.beginPath()\n    context.moveTo 96.5, 32.5\n    context.lineTo 304.5, 113.5\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Oval Drawing\n    arc context, 264, 112, 61, 61, 285, 21, false\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 2 Drawing\n    context.beginPath()\n    context.moveTo 252, 335\n    context.lineTo 324, 150\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Oval 2 Drawing\n    arc context, 188, 297, 63, 63, 285, 86, false\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 3 Drawing\n    context.beginPath()\n    context.moveTo 22.5, 218.5\n    context.lineTo 230.5, 299.5\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 4 Drawing\n    context.beginPath()\n    context.moveTo 108, 360\n    context.lineTo 223, 360\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 5 Drawing\n    context.beginPath()\n    context.moveTo 142, 266\n    context.lineTo 142, 360\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 6 Drawing\n    context.beginPath()\n    context.moveTo 108, 340\n    context.lineTo 143, 340\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 7 Drawing\n    context.beginPath()\n    context.moveTo 108, 318\n    context.lineTo 143, 318\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 8 Drawing\n    context.beginPath()\n    context.moveTo 108, 296\n    context.lineTo 143, 296\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 9 Drawing\n    context.beginPath()\n    context.moveTo 108, 274\n    context.lineTo 143, 274\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 10 Drawing\n    context.beginPath()\n    context.moveTo 128, 47\n    context.lineTo 58, 226\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 12 Drawing\n    context.beginPath()\n    context.moveTo 32, 197\n    context.lineTo 62, 209\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 13 Drawing\n    context.beginPath()\n    context.moveTo 41, 177\n    context.lineTo 71, 189\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 11 Drawing\n    context.beginPath()\n    context.moveTo 48, 156\n    context.lineTo 78, 168\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 14 Drawing\n    context.beginPath()\n    context.moveTo 57, 136\n    context.lineTo 87, 148\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 15 Drawing\n    context.beginPath()\n    context.moveTo 64, 115\n    context.lineTo 94, 127\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 16 Drawing\n    context.beginPath()\n    context.moveTo 73, 95\n    context.lineTo 103, 107\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 17 Drawing\n    context.beginPath()\n    context.moveTo 80, 74\n    context.lineTo 110, 86\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Bezier 18 Drawing\n    context.beginPath()\n    context.moveTo 89, 54\n    context.lineTo 119, 66\n    context.lineCap = \'round\'\n    context.strokeStyle = color2\n    context.lineWidth = 10\n    context.stroke()\n    #// Oval 3 Drawing\n    oval context, 312, 275, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 4 Drawing\n    oval context, 332, 350, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 5 Drawing\n    oval context, 321, 324, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 6 Drawing\n    oval context, 302, 314, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 7 Drawing\n    oval context, 313, 300, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 8 Drawing\n    oval context, 342, 314, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 9 Drawing\n    oval context, 334, 286, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 10 Drawing\n    oval context, 353, 271, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 11 Drawing\n    oval context, 327, 262, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 12 Drawing\n    oval context, 341, 251, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 13 Drawing\n    oval context, 356, 243, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 14 Drawing\n    oval context, 322, 238, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 15 Drawing\n    oval context, 338, 224, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 16 Drawing\n    oval context, 361, 225, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 17 Drawing\n    oval context, 348, 206, 10, 9\n    context.fillStyle = color2\n    context.fill()\n    #// Oval 18 Drawing\n    oval context, 372, 198, 10, 9\n    context.fillStyle = color2\n    context.fill()\n';
