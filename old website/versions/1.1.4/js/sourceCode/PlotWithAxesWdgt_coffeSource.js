// Generated by CoffeeScript 1.12.7
window.PlotWithAxesWdgt_coffeSource = '# REQUIRES KeepsRatioWhenInVerticalStackMixin\n\nclass PlotWithAxesWdgt extends Widget\n\n  @augmentWith KeepsRatioWhenInVerticalStackMixin, @name\n\n  constructor: (@plot) ->\n    super\n    @plot.drawOnlyPartOfBoundingRect = true\n    @appearance = new RectangularAppearance @\n\n    @add @plot\n\n    @vertAxis = new AxisWdgt -5, 5\n    @add @vertAxis\n    @horizAxis = new AxisWdgt -5, 5\n    @add @horizAxis\n\n    @setColor new Color 242,242,242\n\n    @invalidateLayout()\n\n  colloquialName: ->\n    @plot.colloquialName()\n\n  rawSetExtent: (aPoint) ->\n    super\n    @invalidateLayout()\n\n  doLayout: (newBoundsForThisLayout) ->\n    if !window.recalculatingLayouts\n      debugger\n\n    debugger\n\n    if !newBoundsForThisLayout?\n      if @desiredExtent?\n        newBoundsForThisLayout = @desiredExtent\n        @desiredExtent = nil\n      else\n        newBoundsForThisLayout = @extent()\n\n      if @desiredPosition?\n        newBoundsForThisLayout = (new Rectangle @desiredPosition).setBoundsWidthAndHeight newBoundsForThisLayout\n        @desiredPosition = nil\n      else\n        newBoundsForThisLayout = (new Rectangle @position()).setBoundsWidthAndHeight newBoundsForThisLayout\n\n    if @isCollapsed()\n      @layoutIsValid = true\n      @notifyChildrenThatParentHasReLayouted()\n      return\n\n    @rawSetBounds newBoundsForThisLayout\n\n    # here we are disabling all the broken\n    # rectangles. The reason is that all the\n    # submorphs of the inspector are within the\n    # bounds of the parent Widget. This means that\n    # if only the parent morph breaks its rectangle\n    # then everything is OK.\n    # Also note that if you attach something else to its\n    # boundary in a way that sticks out, that\'s still\n    # going to be painted and moved OK.\n    trackChanges.push false\n\n    height = @height()\n    width = @width()\n\n    ftft = 35\n\n    @vertAxis.rawSetExtent (new Point width/10 - 4, height).round()\n    @vertAxis.fullRawMoveTo (@position().add new Point 0, -2).subtract((new Point -width/ftft,height/ftft).round())\n\n    @horizAxis.rawSetExtent (new Point width, height/10).round()\n    adjustmentX = (@vertAxis.left() + @horizAxis.distanceOfAxisOriginFromEdge().x) - ( @vertAxis.right() + @vertAxis.distanceOfAxisOriginFromEdge().x )\n    @horizAxis.fullRawMoveTo (@bottomLeft().subtract new Point adjustmentX, height/10).round().subtract((new Point -width/ftft,height/ftft).round())\n\n    @plot.rawSetExtent (new Point width - 2 *  @horizAxis.distanceOfAxisOriginFromEdge().x , height - 2 *  @vertAxis.distanceOfAxisOriginFromEdge().y).round()\n    @plot.fullRawMoveTo (@position().add new Point @horizAxis.distanceOfAxisOriginFromEdge().x - adjustmentX + 1, @vertAxis.distanceOfAxisOriginFromEdge().y - 1).round().subtract((new Point -width/ftft,height/ftft).round())\n\n    trackChanges.pop()\n    @fullChanged()\n\n    @layoutIsValid = true\n    @notifyChildrenThatParentHasReLayouted()\n\n    if AutomatorRecorderAndPlayer? and AutomatorRecorderAndPlayer.state != AutomatorRecorderAndPlayer.IDLE and AutomatorRecorderAndPlayer.alignmentOfMorphIDsMechanism\n      world.alignIDsOfNextMorphsInSystemTests()';
