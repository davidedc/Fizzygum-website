// Generated by CoffeeScript 1.12.7
window.ControllerMixin_coffeSource = '# //////////////////////////////////////////////////////////\n\n# these comments below needed to figure out dependencies between classes\n# REQUIRES globalFunctions\n\n# some morphs (for example ColorPaletteMorph\n# or SliderMorph) can control a target\n# and they have the same function to attach\n# targets. Not worth having this in the\n# whole Widget hierarchy, so... ideal use\n# of mixins here.\n\nControllerMixin =\n  # class properties here:\n  # none\n\n  # instance properties to follow:\n  onceAddedClassProperties: (fromClass) ->\n    @addInstanceProperties fromClass,\n      openTargetSelector: ->\n        choices = world.plausibleTargetAndDestinationMorphs @\n        if choices.length > 0\n          menu = new MenuMorph @, false, @, true, true, "choose target:"\n          #choices.push @world()\n          choices.forEach (each) =>\n            if !(each instanceof FanoutPinWdgt)\n              menu.addMenuItem (each.toString().replace "Wdgt", "").slice(0, 50) + " âžœ", false, @, "openTargetPropertySelector", nil, nil, nil, nil, nil, each, nil, true\n        else\n          menu = new MenuMorph @, false, @, true, true, "no targets available"\n        menu.popUpAtHand()\n\n      setTargetAndActionWithOnesPickedFromMenu: (ignored, ignored2, theTarget, each) ->\n        @target = theTarget\n        @action = each\n        if @target[@action + "IsConnected"]?\n          @target[@action + "IsConnected"] = true\n        @connectionsCalculationToken = getRandomInt -20000, 20000\n        @reactToTargetConnection?()\n\n';
