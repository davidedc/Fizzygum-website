// Generated by CoffeeScript 1.10.0
window.Appearance_coffeSource = '# Appearance //////////////////////////////////////////////////////////////\n\n# REQUIRES DeepCopierMixin\n\nclass Appearance\n  # this is so we can create objects from the object class name \n  # (for the deserialization process)\n  namedClasses[@name] = @prototype\n\n  @augmentWith DeepCopierMixin\n\n  morph: null\n\n  constructor: (@morph) ->\n\n  isTransparentAt: (aPoint) ->\n\n  # paintHighlight can work in two patterns:\n  #  * passing actual pixels, when used\n  #    outside the effect of the scope of\n  #    "scale pixelRatio, pixelRatio", or\n  #  * passing logical pixels, when used\n  #    inside the effect of the scope of\n  #    "scale pixelRatio, pixelRatio", or\n  # Mostly, the first pattern is used.\n  paintHighlight: (aContext, al, at, w, h) ->\n\n\n  # This method only paints this very morph\n  # i.e. it doesn\'t descend the children\n  # recursively. The recursion mechanism is done by fullPaintIntoAreaOrBlitFromBackBuffer,\n  # which eventually invokes paintIntoAreaOrBlitFromBackBuffer.\n  # Note that this morph might paint something on the screen even if\n  # it\'s not a "leaf".\n  paintIntoAreaOrBlitFromBackBuffer: (aContext, clippingRectangle) ->\n';
