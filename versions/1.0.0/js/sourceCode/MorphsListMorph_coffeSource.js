// Generated by CoffeeScript 1.10.0
window.MorphsListMorph_coffeSource = '# MorphsListMorph //////////////////////////////////////////////////////\n\nclass MorphsListMorph extends BoxMorph\n  # this is so we can create objects from the object class name \n  # (for the deserialization process)\n  namedClasses[@name] = @prototype\n\n  # panes:\n  morphsList: null\n  buttonClose: null\n  resizer: null\n\n  constructor: (target) ->\n    super()\n\n    @silentRawSetExtent new Point(\n      WorldMorph.preferencesAndSettings.handleSize * 10,\n      WorldMorph.preferencesAndSettings.handleSize * 20 * 2 / 3)\n    @cornerRadius = 5\n    @color = new Color 60, 60, 60\n    @buildAndConnectChildren()\n  \n  setTarget: (target) ->\n    @target = target\n    @currentProperty = null\n    @buildAndConnectChildren()\n  \n  buildAndConnectChildren: ->\n    @attribs = []\n\n    # remove existing panes\n    @fullDestroyChildren()\n\n    # label\n    @label = new TextMorph "Morphs List"\n    @label.fontSize = WorldMorph.preferencesAndSettings.menuFontSize\n    @label.isBold = true\n    @label.color = new Color 255, 255, 255\n    @add @label\n\n    # Check which objects end with the word Morph\n    theWordMorph = "Morph"\n    ListOfMorphs = (Object.keys(window)).filter (i) ->\n      i.indexOf(theWordMorph, i.length - theWordMorph.length) isnt -1\n    @morphsList = new ListMorph(ListOfMorphs, null)\n\n    # so far nothing happens when items are selected\n    #@morphsList.action = (selected) ->\n    #  val = myself.target[selected]\n    #  myself.currentProperty = val\n    #  if val is null\n    #    txt = "NULL"\n    #  else if isString(val)\n    #    txt = val\n    #  else\n    #    txt = val.toString()\n    #  cnts = new TextMorph(txt)\n    #  cnts.isEditable = true\n    #  cnts.enableSelecting()\n    #  cnts.setReceiver myself.target\n    #  myself.detail.setContents cnts\n\n    @morphsList.hBar.alpha = 0.6\n    @morphsList.vBar.alpha = 0.6\n    @add @morphsList\n\n    # close button\n    @buttonClose = new TriggerMorph true, @\n    @buttonClose.setLabel "close"\n    @buttonClose.action = "destroy"\n\n    @add @buttonClose\n\n    # resizer\n    @resizer = new HandleMorph @\n\n    # update layout\n    @layoutSubmorphs()\n  \n  layoutSubmorphs: ->\n    super()\n    trackChanges.push false\n\n    # label\n    x = @left() + @cornerRadius\n    y = @top() + @cornerRadius\n    r = @right() - @cornerRadius\n    w = r - x\n    @label.fullRawMoveTo new Point x, y\n    @label.rawSetWidth w\n    if @label.height() > (@height() - 50)\n      @rawSetHeight @label.height() + 50\n      @changed()\n\n    # morphsList\n    y = @label.bottom() + 2\n    w = @width() - @cornerRadius\n    w -= @cornerRadius\n    b = @bottom() - (2 * @cornerRadius) - WorldMorph.preferencesAndSettings.handleSize\n    h = b - y\n    @morphsList.fullRawMoveTo new Point x, y\n    @morphsList.rawSetExtent new Point w, h\n\n    # close button\n    x = @morphsList.left()\n    y = @morphsList.bottom() + @cornerRadius\n    h = WorldMorph.preferencesAndSettings.handleSize\n    w = @morphsList.width() - h - @cornerRadius\n    @buttonClose.fullRawMoveTo new Point x, y\n    @buttonClose.rawSetExtent new Point w, h\n    trackChanges.pop()\n    @changed()\n  \n';
