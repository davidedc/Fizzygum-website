// Generated by CoffeeScript 1.12.7
window.SimpleSlideWdgt_coffeSource = 'class SimpleSlideWdgt extends StretchableEditableWdgt\n\n  colloquialName: ->   \n    "Slides Maker"\n\n  representativeIcon: ->\n    new SimpleSlideIconWdgt()\n\n\n  createToolsPanel: ->\n    # tools -------------------------------\n    @toolsPanel = new ScrollPanelWdgt new ToolPanelWdgt()\n\n    if false\n      console.time \'createToolsPanel\'\n      @toolsPanel.add new TextBoxCreatorButtonWdgt()\n      @toolsPanel.add new ExternalLinkCreatorButtonWdgt()\n      @toolsPanel.add new VideoPlayCreatorButtonWdgt()\n\n      @toolsPanel.add new WorldMapCreatorButtonWdgt()\n      @toolsPanel.add new USAMapCreatorButtonWdgt()\n\n      @toolsPanel.add new RectangleMorph()\n\n      @toolsPanel.add new MapPinIconWdgt()\n\n      @toolsPanel.add new SpeechBubbleWdgt()\n\n      @toolsPanel.add new DestroyIconMorph()\n      @toolsPanel.add new ScratchAreaIconMorph()\n      @toolsPanel.add new FloraIconMorph()\n      @toolsPanel.add new ScooterIconMorph()\n      @toolsPanel.add new HeartIconMorph()\n\n      @toolsPanel.add new FizzygumLogoIconWdgt()\n      @toolsPanel.add new FizzygumLogoWithTextIconWdgt()\n      @toolsPanel.add new VaporwaveBackgroundIconWdgt()\n      @toolsPanel.add new VaporwaveSunIconWdgt()\n\n      @toolsPanel.add new ArrowNIconWdgt()\n      @toolsPanel.add new ArrowSIconWdgt()\n      @toolsPanel.add new ArrowWIconWdgt()\n      @toolsPanel.add new ArrowEIconWdgt()\n      @toolsPanel.add new ArrowNWIconWdgt()\n      @toolsPanel.add new ArrowNEIconWdgt()\n      @toolsPanel.add new ArrowSWIconWdgt()\n      @toolsPanel.add new ArrowSEIconWdgt()\n      console.timeEnd \'createToolsPanel\'\n\n    # from some measuring (30 measurements or so)\n    # the batched approach seems twice as fast\n    # (average of 5.4 ms on my machine instead of 10 ms), and\n    # also variance is lower (3.1 vs 9.5).\n    #console.time \'createToolsPanel\'\n    @toolsPanel.addMany [\n      new TextBoxCreatorButtonWdgt()\n      new ExternalLinkCreatorButtonWdgt()\n      new VideoPlayCreatorButtonWdgt()\n\n      new WorldMapCreatorButtonWdgt()\n      new USAMapCreatorButtonWdgt()\n\n      new RectangleMorph()\n\n      new MapPinIconWdgt()\n\n      new SpeechBubbleWdgt()\n\n      new DestroyIconMorph()\n      new ScratchAreaIconMorph()\n      new FloraIconMorph()\n      new ScooterIconMorph()\n      new HeartIconMorph()\n\n      new FizzygumLogoIconWdgt()\n      new FizzygumLogoWithTextIconWdgt()\n      new VaporwaveBackgroundIconWdgt()\n      new VaporwaveSunIconWdgt()\n\n      new ArrowNIconWdgt()\n      new ArrowSIconWdgt()\n      new ArrowWIconWdgt()\n      new ArrowEIconWdgt()\n      new ArrowNWIconWdgt()\n      new ArrowNEIconWdgt()\n      new ArrowSWIconWdgt()\n      new ArrowSEIconWdgt()\n    ]\n    #console.timeEnd \'createToolsPanel\'\n\n\n\n    @toolsPanel.disableDragsDropsAndEditing()\n    @add @toolsPanel\n    @dragsDropsAndEditingEnabled = true\n    @invalidateLayout()\n\n  createNewStretchablePanel: ->\n    @stretchableWidgetContainer = new StretchableWidgetContainerWdgt()\n    @add @stretchableWidgetContainer\n\n\n  reLayout: ->\n    # here we are disabling all the broken\n    # rectangles. The reason is that all the\n    # submorphs of the inspector are within the\n    # bounds of the parent Widget. This means that\n    # if only the parent morph breaks its rectangle\n    # then everything is OK.\n    # Also note that if you attach something else to its\n    # boundary in a way that sticks out, that\'s still\n    # going to be painted and moved OK.\n    trackChanges.push false\n\n    # label\n    labelLeft = @left() + @externalPadding\n    labelTop = @top() + @externalPadding\n    labelRight = @right() - @externalPadding\n    labelWidth = labelRight - labelLeft\n    labelBottom = @top() + @externalPadding\n\n    # tools -------------------------------\n\n    b = @bottom() - (2 * @externalPadding)\n\n    if @toolsPanel?.parent == @\n      @toolsPanel.fullRawMoveTo new Point @left() + @externalPadding, labelBottom\n      @toolsPanel.rawSetExtent new Point 95, @height() - 2 * @externalPadding\n\n\n    # stretchableWidgetContainer --------------------------\n\n    stretchableWidgetContainerWidth = @width() - 2*@externalPadding\n    \n    if @dragsDropsAndEditingEnabled\n      stretchableWidgetContainerWidth -= @toolsPanel.width() + @internalPadding\n\n    b = @bottom() - (2 * @externalPadding)\n    stretchableWidgetContainerHeight =  @height() - 2 * @externalPadding\n    stretchableWidgetContainerBottom = labelBottom + stretchableWidgetContainerHeight\n    if @dragsDropsAndEditingEnabled\n      stretchableWidgetContainerLeft = @toolsPanel.right() + @internalPadding\n    else\n      stretchableWidgetContainerLeft = @left() + @externalPadding\n\n    if @stretchableWidgetContainer.parent == @\n      @stretchableWidgetContainer.fullRawMoveTo new Point stretchableWidgetContainerLeft, labelBottom\n      @stretchableWidgetContainer.setExtent new Point stretchableWidgetContainerWidth, stretchableWidgetContainerHeight\n\n    # ----------------------------------------------\n\n\n    trackChanges.pop()\n    if AutomatorRecorderAndPlayer? and AutomatorRecorderAndPlayer.state != AutomatorRecorderAndPlayer.IDLE and AutomatorRecorderAndPlayer.alignmentOfMorphIDsMechanism\n      world.alignIDsOfNextMorphsInSystemTests()\n\n    @layoutIsValid = true\n    @notifyChildrenThatParentHasReLayouted()\n\n\n';
