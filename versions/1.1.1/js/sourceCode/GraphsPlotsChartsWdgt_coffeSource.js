// Generated by CoffeeScript 1.12.7
window.GraphsPlotsChartsWdgt_coffeSource = '# REQUIRES KeepsRatioWhenInVerticalStackMixin\n\nclass GraphsPlotsChartsWdgt extends Widget\n\n  @augmentWith KeepsRatioWhenInVerticalStackMixin, @name\n\n  drawOnlyPartOfBoundingRect: false\n\n  constructor: (@drawOnlyPartOfBoundingRect)->\n    super()\n    @setColor new Color 255, 125, 125\n    @rawSetExtent new Point 200, 200\n\n\n  # see https://stackoverflow.com/a/19303725\n  seededRandom: ->\n    x = Math.sin(@seed++) * 10000\n    return x - Math.floor(x)\n\n  # Standard Normal variate using Box-Muller transform\n  # see https://stackoverflow.com/a/36481059\n  seeded_randn_bm: ->\n    u = 0\n    v = 0\n    while u == 0\n      u = @seededRandom()\n    #Converting [0,1) to (0,1)\n    while v == 0\n      v = @seededRandom()\n    return Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v)\n\n  simpleShadow: (context, color, appliedShadow) ->\n\n    height = @height()\n    width = @width()\n\n    if appliedShadow?\n      context.globalAlpha = (if appliedShadow? then appliedShadow.alpha else 1) * @alpha\n      context.fillStyle = (new Color 80, 80, 80).toString()\n      context.fillRect 0, 0, width, height\n      # let\'s avoid paint 3d stuff twice because\n      # of the shadow\n  \n  drawBoundingBox: (context, color, appliedShadow) ->\n\n    height = @height()\n    width = @width()\n\n    context.strokeStyle = (new Color 30,30,30).toString()\n    if @drawOnlyPartOfBoundingRect\n      context.beginPath()\n      context.moveTo 0, 0\n      context.lineTo width, 0\n      context.lineTo width, height\n      context.stroke()\n    else\n      context.strokeRect 0, 0, width, height\n';
