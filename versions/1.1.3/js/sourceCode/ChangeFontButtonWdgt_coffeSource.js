// Generated by CoffeeScript 1.12.7
window.ChangeFontButtonWdgt_coffeSource = '# REQUIRES HighlightableMixin\n# REQUIRES ParentStainerMixin\n\nclass ChangeFontButtonWdgt extends IconMorph\n\n  @augmentWith HighlightableMixin, @name\n  @augmentWith ParentStainerMixin, @name\n\n  color_hover: new Color 90, 90, 90\n  color_pressed: new Color 128, 128, 128\n  color_normal: new Color 230, 230, 230\n\n  simpleDocument: nil\n\n  constructor: (@simpleDocument) ->\n    super\n    @appearance = new ChangeFontIconAppearance @, WorldMorph.preferencesAndSettings.iconDarkLineColor\n\n    @actionableAsThumbnail = true\n    @editorContentPropertyChangerButton = true\n    @toolTipMessage = "change font"\n\n  mouseClickLeft: ->\n    # if there is already a font selection menu for the editor,\n    # bring that one up, otherwise create one and rember that we created it\n    if @simpleDocument.fontSelectionMenu? and\n     !@simpleDocument.fontSelectionMenu.destroyed\n      @simpleDocument.fontSelectionMenu.popUp @position().subtract(new Point 80,0), world\n    else\n      menu = new MenuMorph @, false, @, true, true, "Fonts"\n      menu.addMenuItem "Arial", true, @, "setFontName", nil, nil, nil, nil, nil, "justArialFontStack"\n      menu.addMenuItem "Times", true, @, "setFontName", nil, nil, nil, nil, nil, "timesFontStack"\n      menu.addMenuItem "Georgia", true, @, "setFontName", nil, nil, nil, nil, nil, "georgiaFontStack"\n      menu.addMenuItem "Garamo", true, @, "setFontName", nil, nil, nil, nil, nil, "garamoFontStack"\n      menu.addMenuItem "Helve", true, @, "setFontName", nil, nil, nil, nil, nil, "helveFontStack"\n      menu.addMenuItem "Verda", true, @, "setFontName", nil, nil, nil, nil, nil, "verdaFontStack"\n      menu.addMenuItem "Treby", true, @, "setFontName", nil, nil, nil, nil, nil, "trebuFontStack"\n      menu.addMenuItem "Heavy", true, @, "setFontName", nil, nil, nil, nil, nil, "heavyFontStack"\n      menu.addMenuItem "Mono", true, @, "setFontName", nil, nil, nil, nil, nil, "monoFontStack"\n\n      menu.popUp @position().subtract(new Point 80,0), world\n\n      menu.editorContentPropertyChangerButton = true\n      menu.forAllChildrenBottomToTop (eachDescendent) ->\n        eachDescendent.editorContentPropertyChangerButton = true\n\n      @simpleDocument.fontSelectionMenu = menu\n\n  setFontName: (ignored1, ignored2, theNewFontName) ->\n    if world.lastNonTextPropertyChangerButtonClickedOrDropped?.setFontName?\n      widgetClickedLast = world.lastNonTextPropertyChangerButtonClickedOrDropped\n      widgetClickedLast.setFontName(nil, ignored2, widgetClickedLast[theNewFontName])\n\n\n\n';
