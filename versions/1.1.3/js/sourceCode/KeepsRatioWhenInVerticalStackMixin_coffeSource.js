// Generated by CoffeeScript 1.12.7
window.KeepsRatioWhenInVerticalStackMixin_coffeSource = '# REQUIRES globalFunctions\n\n\nKeepsRatioWhenInVerticalStackMixin =\n  # class properties here:\n  # none\n\n  # instance properties to follow:\n  onceAddedClassProperties: (fromClass) ->\n    @addInstanceProperties fromClass,\n\n    rawSetWidthSizeHeightAccordingly: (newWidth) ->\n      @rawResizeToWithoutSpacing?()\n      ratio = @height()/@width()\n      @rawSetExtent new Point newWidth, Math.round newWidth * ratio\n\n    holderWindowJustBeenGrabbed: (whereFrom) ->\n      if whereFrom instanceof SimpleVerticalStackPanelWdgt\n        @freeFromRatioConstraints()\n\n    holderWindowMadeIntoExternal: ->\n      @freeFromRatioConstraints()\n\n    freeFromRatioConstraints: ->\n      if @layoutSpecDetails?\n        @layoutSpecDetails.canSetHeightFreely = true\n\n        availableHeight = world.height() - 20\n        if @parent.height() > availableHeight\n          @parent.rawSetExtent (new Point Math.min((@width()/@height()) * availableHeight, world.width()), availableHeight).round()\n          @parent.fullRawMoveTo world.hand.position().subtract @parent.extent().floorDivideBy 2\n          @parent.fullRawMoveWithin world\n\n    holderWindowJustDropped: (whereIn) ->\n      if (whereIn instanceof SimpleVerticalStackPanelWdgt) and !(whereIn instanceof WindowWdgt)\n        @constrainToRatio()\n\n    constrainToRatio: ->\n      if @layoutSpecDetails?\n        @layoutSpecDetails.canSetHeightFreely = false\n        # force a resize, so widget\n        # will take the right ratio\n        # Note that the height of 0 here is ignored since\n        # "rawSetWidthSizeHeightAccordingly" will\n        # calculate the height.\n        @rawSetWidthSizeHeightAccordingly @width()\n';
